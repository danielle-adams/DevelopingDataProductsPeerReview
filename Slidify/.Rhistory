quantile(pack_sum$count,prob = 0.99)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
?%>%
submit()
View(result3)
submti()
submit()
source('C:/Users/ADMINI~1/AppData/Local/Temp/Rtmp8EHKHJ/chain1.R')
submit()
source('C:/Users/ADMINI~1/AppData/Local/Temp/Rtmp8EHKHJ/chain2.R')
submit()
source('C:/Users/ADMINI~1/AppData/Local/Temp/Rtmp8EHKHJ/chain3.R')
submit()
source('C:/Users/ADMINI~1/AppData/Local/Temp/Rtmp8EHKHJ/chain4.R')
submit()
library(tidyr)
students
?gather
gather(students,sex,count,-grade)
students2
res <- gather(students2,sex_class,count,-grade)
res
?separate
separate(data = res, col = sex_class, into = c("sex","class"))
source('C:/Users/ADMINI~1/AppData/Local/Temp/Rtmp8EHKHJ/script1.R')
submit()
students3
source('C:/Users/ADMINI~1/AppData/Local/Temp/Rtmp8EHKHJ/script2.R')
source('C:/Users/ADMINI~1/AppData/Local/Temp/Rtmp8EHKHJ/script2.R')
submit()
?spread
source('C:/Users/ADMINI~1/AppData/Local/Temp/Rtmp8EHKHJ/script3.R')
temp <- gather(students2,class, grade, class1:class5, na.rm = TRUE)
temp <- gather(students3,class, grade, class1:class5, na.rm = TRUE)
temp
spread(temp,test,class)
spread(temp,c=("midterm","final"),test)
spread(temp,test)
spread(temp,test,test)
source('C:/Users/ADMINI~1/AppData/Local/Temp/Rtmp8EHKHJ/script3.R')
source('C:/Users/ADMINI~1/AppData/Local/Temp/Rtmp8EHKHJ/script3.R')
submit()
source('C:/Users/ADMINI~1/AppData/Local/Temp/Rtmp8EHKHJ/script3.R')
spread(temp,test = "midterm",test = "final")
spread(temp,test,na.rm= TRUE)
spread(temp,test,grade)
source('C:/Users/ADMINI~1/AppData/Local/Temp/Rtmp8EHKHJ/script3.R')
submit()
extract_numeric("class5")
?mutate
source('C:/Users/ADMINI~1/AppData/Local/Temp/Rtmp8EHKHJ/script4.R')
submit()
temp <- spread(temp,test,grade)
temp
mutate(temp,class = extract_numeric(class))
source('C:/Users/ADMINI~1/AppData/Local/Temp/Rtmp8EHKHJ/script4.R')
submit()
students4
source('C:/Users/ADMINI~1/AppData/Local/Temp/Rtmp8EHKHJ/script5.R')
submit()
?unique
source('C:/Users/ADMINI~1/AppData/Local/Temp/Rtmp8EHKHJ/script6.R')
source('C:/Users/ADMINI~1/AppData/Local/Temp/Rtmp8EHKHJ/script6.R')
submit()
source('C:/Users/ADMINI~1/AppData/Local/Temp/Rtmp8EHKHJ/script7.R')
submit()
passed
failed
"A">"C"
passed <- passed %>% mutate(status = "passed")
failed <- failed %>% mutate(status = "failed")
packageVersion('dplyr')
bind_rows(passed,failed)
sat
sat1 >- select(sat,-contains("total"))
sat1 <- select(sat,-contains("total"))
sat
sat1
sat2 <- gather(contains(c("male","fem")),count,-grade)
sat2 <- gather(contains(c("male","fem")),count,-score_range)
sat2 <- gather(part_sex,count,-score_range)
sat2 <- gather(,sat1part_sex,count,-score_range)
sat2 <- gather(sat1,part_sex,count,-score_range)
sat2
separate(sat2,part_sex, into = c("part","sex"),count)
?separate
separate(sat2,part_sex, into = c("part","sex"))
source('C:/Users/ADMINI~1/AppData/Local/Temp/Rtmp8EHKHJ/script8.R')
source('C:/Users/ADMINI~1/AppData/Local/Temp/Rtmp8EHKHJ/script8.R')
submit()
submit()
?goup_by
?group_by
sat3 <- separate(sat2,part_sex, into = c("part","sex"))
sat3
sat4 <- group_by(sat3,part,sex)
sat4
mutate(sat4,total = sum(count),prop = count / total)
source('C:/Users/ADMINI~1/AppData/Local/Temp/Rtmp8EHKHJ/script9.R')
submit()
data <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
head(data)
?strsplit
splitname <- strsplit(names(data),"wgtp")
splitname[[123]]
data <- read/csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv ")
data <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv ")
head(data)
data <- read.csv("GDP.csv")
head(data)
class(data$dollar[1])
as.numeric(data$dollar[1])
as.character(data$dollar[1])
data$gdp <- as.character(data$dollar)
head(data)
strsplit("2,471,787",",")
sub(",","2,471,787")
sub("_","123_234")
?sub
sub("_","","123_234")
mean(sub(",","",data$gdp))
mean(as.numeric(sub(",","",data$gdp)))
data$gdp <- sub(",","",data$gdp)
head(data)
data$gdp <- sub(",","",data$gdp)
head(data)
gdp <- as.numeric(data$gdp)
mean(gdp)
head(gdp)
sum(gdp)
gdp
mean(gdp,na.rm = TRUE)
grep("^United",data$Economy)
data <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv ")
head(data)
library(quantmod)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
head(sampleTimes)
length(sampleTimes)
length(grep("^2012",sampleTimes))
sample <- sampleTimes[grep("^2012",sampleTimes)]
head(sample)
days(sample[1])
weekdays(sample[1])
length(weekdays(sample)=="星期一")
length(weekdays(sample)=="Mon")
s <- subset(sample, weekdays(sample)=="Mon")
length(s)
s <- subset(sample, weekdays(sample)=="星期一")
length(s)
library(swirl)
swirl()
library(UsingR); data(galton); library(ggplot2)
install.packages("UsingR")
install.packages("UsingR")
g <- ggplot(galton, aes(x = child))
library(ggplot2)
g <- ggplot(galton, aes(x = child))
g <- g + geom_histogram(fill = "salmon", binwidth=1, aes(y=..density..), colour="black")
g <- g + geom_density(size = 2)
g <- g + geom_vline(xintercept = mean(galton$child), size = 2)
g
library(UsingR)
g
head(galton)
x1 <- c(140,138,150,148,135)
x2<- c(132,135,151,146,130)
p<- t.test(x1,x2,paired = TRUE,alternative = "two sided",var.equal = FALSE)$p.value
p<- t.test(x1,x2,paired = TRUE,alternative = "two.sided",var.equal = FALSE)$p.value
p
z <- qnorm(0.05)
mu0 <- 1100 - z*30/sqrt(9)
mu0
mu1 <- 1100 + z*30/sqrt(9)
mu1
z
1100 + c(1,-1)*qt(0.975,8)*30/3
?t.test
t.test(c(1,1,1,0),c(0,0,0,1),paired = TRUE, alternative = "two.sided",var.equal = FALSE)$p.value
p<-t.test(c(1,1,1,0),c(0,0,0,1),paired = TRUE, alternative = "two.sided",var.equal = FALSE)$p.value
1-p
p<-test(c(1,1,1,0),c(0,0,0,1),paired = TRUE, alternative = "two.sided",var.equal = FALSE)$p.value
t.test(c(1,1,1,0),c(0,0,0,1),paired = TRUE)
pbinom(c(1,1,1,0),size = 4,prob = 1)
qbinom(c(1,1,1,0),size = 4,prob = 1)
bbinom(c(1,1,1,0),size = 4,prob = 1)
pbinom(1,size = 1,prob = 3/4)
pt(c(1,1,1,0),3,)
power <- pnorm(10/1787 + qnorm(.95) *0.01, mean = 0.11, sd = 0.01, lower.tail = FALSE)
power
10/1787
1/100
p <- ppois(10-1,lambda = 0.01*1787,lower.tail = FALSE)
p
p <- ppois(10-1,lambda = 0.01*1787,lower.tail = TRUE)
p
0.75 +c(1,-1)/sqrt(4)
poisson.test(10,1787)$conf
?poisson.test
poisson.test(100,1787,0.01)
poisson.test(10,lambda = 1/100*1787,lower.tail = TRUE)
poisson.test(10,lambda = 0.01*1787,lower.tail = TRUE)
ppois(10,lambda=1/100*1787,lower.tail = T)
1100 + c(1,-1)*qt(0.975,8)*30/3
1100 + c(1,-1)*qt(0.95,8)*30/3
m1 <- -3; m2 <- 1
n1 <- n2 <- 9
s1<-1.5;s2<-1.8
se <- sqrt(((n1-1)*s1^2+(n2-1)*s2^2)/(n1+n2-2))
ts <- (m1 - m2) / se
pv <- 2 * pnorm(-abs(ts))
pv
?binom.test
binom.test(3,4,1,alternative = "two.sided")
binom.test(3,4,1,alternative = "greater")
binom.test(3,4,1,alternative = "less")
binom.test(1,4,1,alternative = "less")
binom.test(1,4,p=1,alternative = "less")
binom.test(1,4,p=1,alternative = "less")$p.value
binom.test(1,4,p=0.5,alternative = "less")$p.value
binom.test(1,4,p=0.75,alternative = "less")$p.value
binom.test(1,4,p=0.25,alternative = "less")$p.value
pbinom(1,size = 4, prob = 0.5, lower.tail = FALSE)
pbinom(1,size = 4, prob = 0.5, lower.tail = TRUE)
?t.test
library(MASS)
data(shuttle)
head(shuttle)
fit <- glm(use ~ wind, family='binomial', data=shuttle)
fit
lr <- glm(use ~ wind, family="binomial", data=shuttle)
lr
lr <- glm(use ~ wind, family="binomial", data=subset(shuttle,shuttle$wind = "tail"))
class(shuttle$wind[1])
lr <- glm(use ~ wind, family="binomial", data=subset(shuttle,shuttle$wind == "tail"))
sh <- shuttle
sh$wind = as.character(sh$wind)
lr <- glm(use ~ wind, family="binomial", data=subset(sh,sh$wind == "tail"))
head(sh)
lr <- glm(use ~ wind|wind, family="binomial", data=shuttle)
?glm
summary(lr)
1/0.031
sqrt(32)
head(sh)
sh$head[sh$head == "head"]=1
sh$head[sh$head == "head"]=numeric(1)
head(sh)
sh = subset(sh,wind,use)
sh = subset(sh$wind,sh$use)
wind = sh$wind
use = sh$use
wind[wind=="tail"] = 1
wind[wind=="head"] = 0
head(wind)
class(wind[1])
wind = as.numeric(wind)
head(wind)
lr <- glm(use ~ wind, family="binomial")
lr
wind = 1-wind
head(wind)
lr2 <- glm(use ~ wind, family="binomial")
lr2
head(shuttle)
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
plot(x,y)
plot(x,y,type = 'l')
data(InsectSpray)
data(InsectSprays)
head(InsectSprays)
lr <- glm(count ~ spray, family="binomial",data = InsectSprays)
lr <- glm(count ~ spray, family="binomial", data=InsectSprays)
lr <- glm(count ~ spray, family="poisson", data=InsectSprays)
lr
1/0.05588
1-0.05588
9/13
library(swril)
library(swirl)
swirl()
ones <- rep(1,nrow(galton))
lm(child~ones+parent-1,galton)
lm(child~parent,galton)
lm(child ~ 1, galton)
View(trees)
fit <- lm(Volume~Girth + Height + Constant -1 ,trees)
trees2 <- eliminate("Girth",trees)
View(trees2)
fit2 <- lm(Volume ~ Height + Constant -1 ,trees2)
lapply(list(fit1,fit2),coef)
lapply(list(fit,fit2),coef)
dice_sqr
sum(dice_sqr*PDF)
PDF
dice_fair
ex2_fair <- sum(dice_fair*dice_sqr)
ex2_fair
ex2_fair - 3.5^2
ex2_high <- sum(dice_high*dice_sqr)
sum(dice_high * dice_sqr)-edh^2
sd(apply(matrix(rnorm(10000),1000),1,mean))
1/sqrt(10)
1/sqrt(120)
sd(apply(matrix(runif(10000),1000),1,mean))
2/sqrt(10)
sd(apply(matrix(rpois(10000,4),1000),1,mean))
1/(2*sqrt(10))
sd(apply(matrix(sample(0:1,10000,TRUE),1000),1,mean))
install.packages("shiny")
library(shiny)
library(markdown)
source('~/server.R')
source('~/server.R')
runApp()
runApp()
source('~/ui.R')
source('~/server.R')
runApp()
runExample("01_hello")
runExample("01_hello")
source('~/Hello/server.R')
source('~/Hello/ui.R')
runApp("Heloo")
runApp("Hello")
runApp("Hello", display.mode = "showcase")
?runApp
min = 5,
source('~/Hello/ui.R')
source('~/Hello/ui.R', echo=TRUE)
?sidebarPanel
library(manipulate)
manipulate(plot(1:x), x = slider(1,
100))
manipulate(plot(1:x), x = slider(1,100))
require(rCharts)
install.packages("rCharts")
install.packages("downloader")
library(downloader)
download("https://github.com/ramnathv/rCharts/archive/master.tar.gz", "rCharts.tar.gz")
install.packages("rCharts.tar.gz", repos = NULL, type = "source")
install.packages("rCharts.tar.gz", repos = NULL, type = "source")
require(rCharts)
install.packages(“httr”)
install.packages("httr")
install.packages("httr")
install.packages("httr")
install.packages("httr")
require(devtools)
install_github("rcharts")
require(devtools)
dl <- "http://cran.r-project.org/src/contrib/Archive/devtools/devtools_1.1.tar.gz"
fl <- "~/devtools_1.1.tar.gz"
download.file( dl , fl )
install.packages( fl , lib = .libPaths()[1] , repos = NULL , type = "source" )
install.packages( fl , lib = .libPaths()[1] , repos = NULL , type = "source" )
require( devtools , lib.loc = .libPaths()[1] )
install_github('rCharts', 'ramnathv')
install_git('git://github.com/ramnathv/rCharts.git')
install.packages("devtools")
library(devtools)
install_github('ramnathv/rCharts')
install_git('git://github.com/ramnathv/rCharts.git')
require(rCharts)
install_github('ramnathv/slidify')
demo(package="rCharts")
install.packages("rCharts.tar.gz", repos = NULL, type = "source")
install.packages("~/rCharts-master")
install.packages("~/rCharts.tar.gz", repos = NULL, type = "source")
runApp()
library(shiny)
library("shiny", lib.loc="D:/Program Files/R/R-3.1.0/library")
library(shiny)
runApp()
library(shiny)
library(ggplot2)
update.packages()
library(manipulate)
library(lattice)
library(shiny)
library(ggplot2)
install.packages("shiny")
library(shiny)
install.packages("Rcpp")
library(shiny)
runApp()
shiny::runApp()
library(markdown)
??rpub
install.packages("~/rCharts.tar.gz", repos = NULL, type = "source")
library(rCharts)
install.packages("rCharts.tar.gz", repos = NULL, type = "source")
library(rCharts)
install_git('git://github.com/ramnathv/rCharts.git')
library(devtools)
install.packages("devtools")
library(devtools)
install_git('git://github.com/ramnathv/rCharts.git')
library(rCharts)
require(rCharts)
haireye = as.data.frame(HairEyeColor)
> n1 <- nPlot(Freq ~ Hair, group = 'Eye', type = 'multiBarChart', data = subset(haireye, Sex == 'Male'))
> n1$save('fig/n1.html', cdn = TRUE)
n1 <- nPlot(Freq ~ Hair, group = 'Eye', type = 'multiBarChart', data = subset(haireye, Sex == 'Male'))
n1$save('fig/n1.html', cdn = TRUE)
n1$save('n1.html', cdn = TRUE)
cat('<iframe src = "n1.html" width = 100%, height=600></iframe>')
name(iris)=gsub("\\.","",names(iris))
name(iris)<-gsub("\\.","",names(iris))
haireye = as.data.frame(HairEyeColor)
data_storm <- read.csv("StormData.csv",nrows = 300)
head(data_storm)
a<-data_storm$BNG_DATE[1]
a
str(data_storm)
a<-as.numeric(format(as.Date(data_storm$BNG_DATE[1],format = "%m/%d/%Y %H:%M:%S"), "%Y"))
data_storm <- read.csv("StormData.csv",nrows = 300,as.is = !stringsAsFactors)
source('~/.active-rstudio-document', echo=TRUE)
data_storm <- read.csv("StormData.csv",nrows = 300,stringsAsFactors = FALSE)
data_storm <- read.csv("StormData.csv",nrows = 300,stringsAsFactors = FALSE)
data_storm <- read.csv("StormData.csv",nrows = 400,stringsAsFactors = FALSE)
str(data_storm)
a <- as.numeric(format(as.Date(data_storm$BNG_DATE[1],format = "%m/%d/%Y %H:%M:%S"), "%Y"))
a <- as.Date(data_storm$BNG_DATE[1],format = "%m/%d/%Y %H:%M:%S")
data_storm$BNG_DATE[1]
View(data_storm)
class(data_storm$BNG_DATE[1])
data_storm$STATE__[1]
data_storm$BNG_DATE[1]
data_storm$BNG_TIME[1]
data_storm$TIME_ZONE[1]
data_storm$TIME_COUNTY[1]
data_storm$COUNTY_NAME[1]
data_storm$COUNTYNAME[1]
data_storm$BGN_DATE[1]
a<-data_storm$BGN_DATE[1]
a
a<-as.Date(a, format = "%m/%d/%Y %H:%M:%S")
a
class
class(a)
data_storm$BGN_DATE <- as.Date(data_storm$BGN_DATE, format = "%m/%d/%Y %H:%M:%S")
hist(data_storm$BGN_DATE)
hist(data_storm$BGN_DATE,breaks = 20)
hist(data_storm$BGN_DATE,breaks = 30)
hist(data_storm$BGN_DATE,breaks = 40)
hist(data_storm$BGN_DATE,breaks = 10)
dir()
data_storm <- read.csv("StormData.csv")
data_storm2 <- read.csv("StormData.csv",nrows = 200, fill = TRUE)
data_storm2 <- read.csv("StormData.csv", fill = TRUE)
data_storm$BGN_DATE <- as.Date(data_storm$BGN_DATE, format = "%m/%d/%Y %H:%M:%S")
data_storm2$BGN_DATE <- as.Date(data_storm2$BGN_DATE, format = "%m/%d/%Y %H:%M:%S")
data_storm <- read.csv("StormData.csv",stringsAsFactors = FALSE,fill = TRUE)
data_storm$BGN_DATE <- as.Date(data_storm$BGN_DATE, format = "%m/%d/%Y %H:%M:%S")
class(data_storm$BGN_DATE[1])
hist(data_storm$BGN_DATE,30)
a<-as.Date(data_storm$BGN_DATE, format = "%m/%d/%Y %H:%M:%S")
a<-as.Date(data_storm$BGN_DATE[1], format = "%m/%d/%Y %H:%M:%S")
a
date<-data_storm$BGN_DATE
View(date)
tail(date)
length(date[1])
length("hello")
strlen("hello")
nchar("hello")
nchar(date[1])
nchar(date[1000])
nchar(date[10000])
nchar(date[100000])
nchar(date[400000])
nchar(date[500000])
nchar(date[600000])
data_storm <- read.csv("StormData.csv")
data_storm$BGN_DATE <- as.Date(data_storm$BGN_DATE, format = "%m/%d/%Y %H:%M:%S")
str(data_storm)
injuries<-as.numeric(data_storm$INJURIES)
date <- data_storm$BNG_DATE
date[1]
data_storm$BNG_DATE[1]
View(data_storm)
date <- data_storm$BGN_DATE
plot(injuries~date,type='l')
plot(injuries,date)
setwd(~/slidify/first_deck)
setwd("~/slidify/first_deck")
library(slidify)
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
